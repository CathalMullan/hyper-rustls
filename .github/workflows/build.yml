name: rustls

permissions:
  contents: read

on:
  push:
  pull_request:
  merge_group:
  schedule:
    - cron: '23 6 * * 5'

jobs:
  build:
    name: Build+test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
        runtime:
          - tokio
          - smol
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: cargo check (default features)
        run: cargo check --all-targets

      - name: cargo test (debug; default features)
        run: cargo test
        env:
          RUST_BACKTRACE: 1

      - name: cargo test (debug; rustls-native-certs only)
        run: cargo test --no-default-features --features ${{ matrix.runtime }},rustls-native-certs
        env:
          RUST_BACKTRACE: 1

      - name: cargo test (debug; webpki-roots only)
        run: cargo test --no-default-features --features ${{ matrix.runtime }},webpki-roots
        env:
          RUST_BACKTRACE: 1

      - name: cargo test (debug; defaults+ring)
        run: cargo test --no-default-features --features ${{ matrix.runtime }},ring,rustls-native-certs,http1,tls12,logging
        env:
          RUST_BACKTRACE: 1

      - name: cargo test (debug; all features)
        run: cargo test --all-features
        env:
          RUST_BACKTRACE: 1

      - name: cargo build (debug; runtime only)
        run: cargo build --no-default-features --features ${{ matrix.runtime }}

      - name: cargo test (debug; runtime only; no run)
        run: cargo test --no-default-features --features ${{ matrix.runtime }} --no-run

      - name: cargo test (release; no run)
        run: cargo test --release --no-run

  msrv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.71"

      - name: Check MSRV
        run: cargo check --lib --all-features

  semver:
    name: Check semver compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

  docs:
    name: Check for documentation errors
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: cargo doc (all features)
        # keep features in sync with Cargo.toml `[package.metadata.docs.rs]` section
        run: cargo doc --no-default-features --features tokio,http1,http2,webpki-roots,rustls-native-certs,ring,tls12,logging --no-deps
        env:
          RUSTDOCFLAGS: -Dwarnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all-features -- --deny warnings

  features:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: Check feature powerset
        run: cargo hack --no-dev-deps check --feature-powerset --depth 3 --mutually-exclusive-features tokio,smol --at-least-one-of tokio,smol
